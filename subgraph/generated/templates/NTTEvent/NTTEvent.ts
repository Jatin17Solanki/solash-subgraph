// THIS IS AN AUTOGENERATED FILE. DO NOT EDIT THIS FILE DIRECTLY.

import {
  ethereum,
  JSONValue,
  TypedMap,
  Entity,
  Bytes,
  Address,
  BigInt
} from "@graphprotocol/graph-ts";

export class NTTContractUpdated extends ethereum.Event {
  get params(): NTTContractUpdated__Params {
    return new NTTContractUpdated__Params(this);
  }
}

export class NTTContractUpdated__Params {
  _event: NTTContractUpdated;

  constructor(event: NTTContractUpdated) {
    this._event = event;
  }

  get contractId(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }

  get contractAddress(): Address {
    return this._event.parameters[1].value.toAddress();
  }

  get creatorAddress(): Address {
    return this._event.parameters[2].value.toAddress();
  }

  get title(): string {
    return this._event.parameters[3].value.toString();
  }

  get description(): string {
    return this._event.parameters[4].value.toString();
  }

  get links(): Array<string> {
    return this._event.parameters[5].value.toStringArray();
  }

  get imageHash(): string {
    return this._event.parameters[6].value.toString();
  }

  get associatedCommunity(): string {
    return this._event.parameters[7].value.toString();
  }

  get startDate(): BigInt {
    return this._event.parameters[8].value.toBigInt();
  }

  get endDate(): BigInt {
    return this._event.parameters[9].value.toBigInt();
  }
}

export class TokenBurnt extends ethereum.Event {
  get params(): TokenBurnt__Params {
    return new TokenBurnt__Params(this);
  }
}

export class TokenBurnt__Params {
  _event: TokenBurnt;

  constructor(event: TokenBurnt) {
    this._event = event;
  }

  get contractAddress(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get tokenId(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }

  get creatorAddress(): Address {
    return this._event.parameters[2].value.toAddress();
  }

  get receiverAddress(): Address {
    return this._event.parameters[3].value.toAddress();
  }

  get title(): string {
    return this._event.parameters[4].value.toString();
  }

  get associatedCommunity(): string {
    return this._event.parameters[5].value.toString();
  }

  get isValid(): boolean {
    return this._event.parameters[6].value.toBoolean();
  }
}

export class TokenMinted extends ethereum.Event {
  get params(): TokenMinted__Params {
    return new TokenMinted__Params(this);
  }
}

export class TokenMinted__Params {
  _event: TokenMinted;

  constructor(event: TokenMinted) {
    this._event = event;
  }

  get contractAddress(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get tokenId(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }

  get creatorAddress(): Address {
    return this._event.parameters[2].value.toAddress();
  }

  get receiverAddress(): Address {
    return this._event.parameters[3].value.toAddress();
  }

  get title(): string {
    return this._event.parameters[4].value.toString();
  }

  get associatedCommunity(): string {
    return this._event.parameters[5].value.toString();
  }

  get isValid(): boolean {
    return this._event.parameters[6].value.toBoolean();
  }
}

export class WhitelistAdded extends ethereum.Event {
  get params(): WhitelistAdded__Params {
    return new WhitelistAdded__Params(this);
  }
}

export class WhitelistAdded__Params {
  _event: WhitelistAdded;

  constructor(event: WhitelistAdded) {
    this._event = event;
  }

  get contractAddress(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get list(): Array<Address> {
    return this._event.parameters[1].value.toAddressArray();
  }
}

export class WhitelistRemoved extends ethereum.Event {
  get params(): WhitelistRemoved__Params {
    return new WhitelistRemoved__Params(this);
  }
}

export class WhitelistRemoved__Params {
  _event: WhitelistRemoved;

  constructor(event: WhitelistRemoved) {
    this._event = event;
  }

  get contractAddress(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get list(): Array<Address> {
    return this._event.parameters[1].value.toAddressArray();
  }
}

export class WhitelistUpdated extends ethereum.Event {
  get params(): WhitelistUpdated__Params {
    return new WhitelistUpdated__Params(this);
  }
}

export class WhitelistUpdated__Params {
  _event: WhitelistUpdated;

  constructor(event: WhitelistUpdated) {
    this._event = event;
  }

  get contractAddress(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get receiver(): Address {
    return this._event.parameters[1].value.toAddress();
  }

  get status(): BigInt {
    return this._event.parameters[2].value.toBigInt();
  }
}

export class NTTEvent__fetchTokenClaimedResultValue0Struct extends ethereum.Tuple {
  get status(): i32 {
    return this[0].toI32();
  }

  get tokenOwner(): Address {
    return this[1].toAddress();
  }

  get tokenId(): BigInt {
    return this[2].toBigInt();
  }
}

export class NTTEvent__getEventDetailsResultValue0Struct extends ethereum.Tuple {
  get contractId(): BigInt {
    return this[0].toBigInt();
  }

  get creator(): Address {
    return this[1].toAddress();
  }

  get title(): string {
    return this[2].toString();
  }

  get description(): string {
    return this[3].toString();
  }

  get links(): Array<string> {
    return this[4].toStringArray();
  }

  get imageHash(): string {
    return this[5].toString();
  }

  get associatedCommunity(): string {
    return this[6].toString();
  }

  get startDate(): BigInt {
    return this[7].toBigInt();
  }

  get endDate(): BigInt {
    return this[8].toBigInt();
  }
}

export class NTTEvent extends ethereum.SmartContract {
  static bind(address: Address): NTTEvent {
    return new NTTEvent("NTTEvent", address);
  }

  fetchTokenClaimed(): Array<NTTEvent__fetchTokenClaimedResultValue0Struct> {
    let result = super.call(
      "fetchTokenClaimed",
      "fetchTokenClaimed():((uint8,address,uint256)[])",
      []
    );

    return result[0].toTupleArray<
      NTTEvent__fetchTokenClaimedResultValue0Struct
    >();
  }

  try_fetchTokenClaimed(): ethereum.CallResult<
    Array<NTTEvent__fetchTokenClaimedResultValue0Struct>
  > {
    let result = super.tryCall(
      "fetchTokenClaimed",
      "fetchTokenClaimed():((uint8,address,uint256)[])",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(
      value[0].toTupleArray<NTTEvent__fetchTokenClaimedResultValue0Struct>()
    );
  }

  getEventDetails(): NTTEvent__getEventDetailsResultValue0Struct {
    let result = super.call(
      "getEventDetails",
      "getEventDetails():((uint256,address,string,string,string[],string,string,uint256,uint256))",
      []
    );

    return changetype<NTTEvent__getEventDetailsResultValue0Struct>(
      result[0].toTuple()
    );
  }

  try_getEventDetails(): ethereum.CallResult<
    NTTEvent__getEventDetailsResultValue0Struct
  > {
    let result = super.tryCall(
      "getEventDetails",
      "getEventDetails():((uint256,address,string,string,string[],string,string,uint256,uint256))",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(
      changetype<NTTEvent__getEventDetailsResultValue0Struct>(
        value[0].toTuple()
      )
    );
  }

  getReceiverStatus(): i32 {
    let result = super.call(
      "getReceiverStatus",
      "getReceiverStatus():(uint8)",
      []
    );

    return result[0].toI32();
  }

  try_getReceiverStatus(): ethereum.CallResult<i32> {
    let result = super.tryCall(
      "getReceiverStatus",
      "getReceiverStatus():(uint8)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toI32());
  }

  mint(): BigInt {
    let result = super.call("mint", "mint():(uint256)", []);

    return result[0].toBigInt();
  }

  try_mint(): ethereum.CallResult<BigInt> {
    let result = super.tryCall("mint", "mint():(uint256)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  ownerOf(tokenId: BigInt): Address {
    let result = super.call("ownerOf", "ownerOf(uint256):(address)", [
      ethereum.Value.fromUnsignedBigInt(tokenId)
    ]);

    return result[0].toAddress();
  }

  try_ownerOf(tokenId: BigInt): ethereum.CallResult<Address> {
    let result = super.tryCall("ownerOf", "ownerOf(uint256):(address)", [
      ethereum.Value.fromUnsignedBigInt(tokenId)
    ]);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }
}

export class ConstructorCall extends ethereum.Call {
  get inputs(): ConstructorCall__Inputs {
    return new ConstructorCall__Inputs(this);
  }

  get outputs(): ConstructorCall__Outputs {
    return new ConstructorCall__Outputs(this);
  }
}

export class ConstructorCall__Inputs {
  _call: ConstructorCall;

  constructor(call: ConstructorCall) {
    this._call = call;
  }

  get _creator(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get _title(): string {
    return this._call.inputValues[1].value.toString();
  }

  get _description(): string {
    return this._call.inputValues[2].value.toString();
  }

  get _links(): Array<string> {
    return this._call.inputValues[3].value.toStringArray();
  }

  get _imageHash(): string {
    return this._call.inputValues[4].value.toString();
  }

  get _associatedCommunity(): string {
    return this._call.inputValues[5].value.toString();
  }

  get _startDate(): BigInt {
    return this._call.inputValues[6].value.toBigInt();
  }

  get _endDate(): BigInt {
    return this._call.inputValues[7].value.toBigInt();
  }

  get _contractId(): BigInt {
    return this._call.inputValues[8].value.toBigInt();
  }

  get _factory(): Address {
    return this._call.inputValues[9].value.toAddress();
  }
}

export class ConstructorCall__Outputs {
  _call: ConstructorCall;

  constructor(call: ConstructorCall) {
    this._call = call;
  }
}

export class AddToWhitelistCall extends ethereum.Call {
  get inputs(): AddToWhitelistCall__Inputs {
    return new AddToWhitelistCall__Inputs(this);
  }

  get outputs(): AddToWhitelistCall__Outputs {
    return new AddToWhitelistCall__Outputs(this);
  }
}

export class AddToWhitelistCall__Inputs {
  _call: AddToWhitelistCall;

  constructor(call: AddToWhitelistCall) {
    this._call = call;
  }

  get list(): Array<Address> {
    return this._call.inputValues[0].value.toAddressArray();
  }
}

export class AddToWhitelistCall__Outputs {
  _call: AddToWhitelistCall;

  constructor(call: AddToWhitelistCall) {
    this._call = call;
  }
}

export class BurnTokenEventCall extends ethereum.Call {
  get inputs(): BurnTokenEventCall__Inputs {
    return new BurnTokenEventCall__Inputs(this);
  }

  get outputs(): BurnTokenEventCall__Outputs {
    return new BurnTokenEventCall__Outputs(this);
  }
}

export class BurnTokenEventCall__Inputs {
  _call: BurnTokenEventCall;

  constructor(call: BurnTokenEventCall) {
    this._call = call;
  }

  get _tokenId(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }
}

export class BurnTokenEventCall__Outputs {
  _call: BurnTokenEventCall;

  constructor(call: BurnTokenEventCall) {
    this._call = call;
  }
}

export class MintCall extends ethereum.Call {
  get inputs(): MintCall__Inputs {
    return new MintCall__Inputs(this);
  }

  get outputs(): MintCall__Outputs {
    return new MintCall__Outputs(this);
  }
}

export class MintCall__Inputs {
  _call: MintCall;

  constructor(call: MintCall) {
    this._call = call;
  }
}

export class MintCall__Outputs {
  _call: MintCall;

  constructor(call: MintCall) {
    this._call = call;
  }

  get value0(): BigInt {
    return this._call.outputValues[0].value.toBigInt();
  }
}

export class RemoveFromWhitelistCall extends ethereum.Call {
  get inputs(): RemoveFromWhitelistCall__Inputs {
    return new RemoveFromWhitelistCall__Inputs(this);
  }

  get outputs(): RemoveFromWhitelistCall__Outputs {
    return new RemoveFromWhitelistCall__Outputs(this);
  }
}

export class RemoveFromWhitelistCall__Inputs {
  _call: RemoveFromWhitelistCall;

  constructor(call: RemoveFromWhitelistCall) {
    this._call = call;
  }

  get list(): Array<Address> {
    return this._call.inputValues[0].value.toAddressArray();
  }
}

export class RemoveFromWhitelistCall__Outputs {
  _call: RemoveFromWhitelistCall;

  constructor(call: RemoveFromWhitelistCall) {
    this._call = call;
  }
}

export class UpdateDetailsCall extends ethereum.Call {
  get inputs(): UpdateDetailsCall__Inputs {
    return new UpdateDetailsCall__Inputs(this);
  }

  get outputs(): UpdateDetailsCall__Outputs {
    return new UpdateDetailsCall__Outputs(this);
  }
}

export class UpdateDetailsCall__Inputs {
  _call: UpdateDetailsCall;

  constructor(call: UpdateDetailsCall) {
    this._call = call;
  }

  get _title(): string {
    return this._call.inputValues[0].value.toString();
  }

  get _description(): string {
    return this._call.inputValues[1].value.toString();
  }

  get _links(): Array<string> {
    return this._call.inputValues[2].value.toStringArray();
  }

  get _imageHash(): string {
    return this._call.inputValues[3].value.toString();
  }

  get _associatedCommunity(): string {
    return this._call.inputValues[4].value.toString();
  }
}

export class UpdateDetailsCall__Outputs {
  _call: UpdateDetailsCall;

  constructor(call: UpdateDetailsCall) {
    this._call = call;
  }
}
